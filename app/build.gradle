apply plugin: 'com.android.application'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.test.uploader"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    flavorDimensions "bundle"
    productFlavors {
        basic { }
        full { }
    }
}

dependencies {
    basicImplementation 'com.google.code.gson:gson:2.8.2'

    fullImplementation 'com.google.code.gson:gson:2.8.2'
    fullImplementation 'com.google.android.gms:play-services-cast-framework:16.2.0'
    fullImplementation 'androidx.mediarouter:mediarouter:1.1.0'
}

//publishing {
//    publications {
//        group project.ext.groupId
//        version project.ext.sdkVersion
//
//        basic(MavenPublication) {
//            artifactId "basic"
//            artifact("libs/print-release.aar") {
//                classifier "minapi16"
//                extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "minapi21"
//                extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "androidTV"
//                extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "fireTV"
//                extension "aar"
//            }
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//
//                //Iterate over the basicImplementation dependencies, adding a <dependency> node for each
//                configurations.basicImplementation.allDependencies.each {
//                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', it.group)
//                    dependencyNode.appendNode('artifactId', it.name)
//                    dependencyNode.appendNode('version', it.version)
//                }
//            }
//        }
//
//        full(MavenPublication) {
//            artifactId "full"
//            artifact("libs/print-release.aar") {
//                classifier "minapi16"
////                    extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "minapi21"
////                    extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "androidTV"
////                    extension "aar"
//            }
//            artifact("libs/print-release.aar") {
//                classifier "fireTV"
////                    extension "aar"
//            }
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//
//                //Iterate over the fullImplementation dependencies, adding a <dependency> node for each
//                configurations.fullImplementation.allDependencies.each {
//                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', it.group)
//                    dependencyNode.appendNode('artifactId', it.name)
//                    dependencyNode.appendNode('version', it.version)
//                }
//            }
//        }
//    }
//}

publishing {
    publications {
        group project.ext.groupId
        version project.ext.sdkVersion

        basic_minapi16(MavenPublication) {
            artifactId "basic-minapi16"
            artifact("libs/print-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the basicImplementation dependencies, adding a <dependency> node for each
                configurations.basicImplementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }

        basic_minapi21(MavenPublication) {
            artifactId "basic-minapi21"
            artifact("libs/print-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the basicImplementation dependencies, adding a <dependency> node for each
                configurations.basicImplementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }

        full_minapi16(MavenPublication) {
            artifactId "full-minapi16"
            artifact("libs/print-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the basicImplementation dependencies, adding a <dependency> node for each
                configurations.fullImplementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }

        full_minapi21(MavenPublication) {
            artifactId "full-minapi21"
            artifact("libs/print-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the basicImplementation dependencies, adding a <dependency> node for each
                configurations.fullImplementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}
